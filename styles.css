/* setting up variables (e.g. set colour scheme) to be called later */
:root {
    /* --temp: rgb(167, 45, 45); */
    --temp: rgb(9, 107, 114);
    /* --backgroundColor: rgb(237, 242, 247); */
    --backgroundColor: rgb(238, 238, 238);
    --primaryFont: rgb(13, 31, 45);
    --secondaryFont: rgb(13, 31, 45);
    --hoverColor: rgb(32, 158, 148);
    --banner: rgb(137, 161, 199);
}

html {
    scroll-snap-type: y mandatory;
}

body {
    font-family: "Ubuntu", Helvetica, sans-serif;
    font-size: larger;
    background-color: var(--backgroundColor);
    color: var(--primaryFont);
    margin: 0px;
}

h1, h2 {
    font-family: "Hammersmith One", Helvetica, sans-serif;
}

/* making the main content stay in the middle of the page */
main article {
    max-width: 75vw;
    margin: auto;
}

article h2 {
    margin-top: 5rem;
}

.graphTitle {
    color: var(--temp);
}

/* .plotly {
    max-width: 750px;
    max-height: 650px;
} */

/* plotContainer includes both the paragraph text and the plotly graph on the side */
.plotContainer {
    display: flex;
    justify-content: center;
    max-height: 600px;
    /* margin: auto; */
    align-items: center;
}

/* .plotContainer div {
    align-self: center;
} */
.plotParagraph {
    align-self: center;
}

.plotRow h3 {
    text-align: center;
}

.banner {
    width: 100%;
    height: 100px;
    display: flex;
    justify-content: center;
    align-items: center;
    /* text-align: center; */
    margin: auto;
    background-color: var(--banner);
}

#solution {
    margin-top: 45px;
    display: flex;
    justify-content: center;
    align-items: flex-end;
}

/* imageContainer styling used to create grids of the solution icons */
.imageContainer {
    margin: auto 15px auto 15px;
    width: 20vw;
    height: auto;
    align-items: center;
}

.imageContainer img {
    width: 98%;
    height: auto;
    align-self: flex-start;
}

.imageContainer p {
    margin-top: 25px;
    margin-bottom: 0px;
    align-content: end;
}

footer {
    /* position: fixed; */
    /* left: 0;
    bottom: 0; */
    width: 100%;
    margin-top: 50px;
    height: 75px;
    text-align: center;
    background-color: rgb(197, 197, 197);
    color: rgb(0, 0, 0);

    display: flex;
    justify-content: center;
    align-items: center;
}

a:link, a:visited {
    color: var(--secondaryFont);
}

a:hover {
    /* color: rgb(9, 150, 82); */
    color: var(--hoverColor);
}

#referenceList {
    color: black;
}
#referenceList:hover {
    color: red;
}

/* The following code is for styling the hero image at the top of the website along with the animated white arrow */
/* References: 
https://www.geeksforgeeks.org/how-to-create-a-hero-image-using-html-and-css/
https://www.youtube.com/watch?v=5CztcrXpfec
*/
/* .heroContainer {
    display: flex;
    align-items: stretch;
} */
/* linear gradient is applied over the hero image, allows fading into the body content */
.heroGradient {
    /* background: linear-gradient(rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.15), rgba(0, 0, 0, 0.1), rgba(237, 242, 247, 1)); */
    /* background: linear-gradient(180deg, rgba(0,0,0,0) 70%, var(--backgroundColor) 100%); */
    width: 100%;
    height: 100vh;
    position: absolute;
}
.heroImage {
    width: 100%;
    height: 100vh;
    margin-top: 0px;
}
.heroContent {
    /* text-align: center; */
    position: absolute;
    /* top: 50px;
    left: 27%; */
    top: 15vh;
    left: 12vw;
    max-width: 35%;
    color: rgb(255, 255, 255);
    font-size: 3.1rem;
    /* font-size: 50px; */
}

/* Source: https://uiverse.io/ArturCodeCraft/afraid-fish-22 */
/* a {
    text-decoration: none;
} */

/* <main-style> ============================ */
/* .scrollText {
    color: rgb(255, 255, 255);
    font-size: 15px;
} */

.scrollContainer {
    /* max-width: fit-content; */
    max-width: 25%;
}

.scrollContainer .scrollBox {
    animation: scroll-down 2s infinite;
    position: inherit;
}

/* Animating the scroll icon */
@keyframes scroll-down {
    0%, 100% {
        transform: translateY(0rem);
        opacity: 1;
    }

    35% {
        transform: translateY(1rem);
        opacity: 0;
    }

    70% {
        transform: translateY(-1rem);
        opacity: 0;
    }
}